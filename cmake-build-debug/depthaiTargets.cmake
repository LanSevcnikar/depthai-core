# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS depthai::core depthai::opencv depthai::depthai-resources depthai::cmrc-base)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target depthai::core
add_library(depthai::core STATIC IMPORTED)

set_target_properties(depthai::core PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "DEPTHAI_TARGET_CORE;DEPTHAI_XTENSOR_SUPPORT"
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_INCLUDE_DIRECTORIES "/home/lan-sevcnikar/Documents/depthai/depthai-core/include;/home/lan-sevcnikar/Documents/depthai/depthai-core/shared/depthai-bootloader-shared/include;/home/lan-sevcnikar/Documents/depthai/depthai-core/include/3rdparty/"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:depthai::depthai-resources>;nlohmann_json::nlohmann_json;libnop;spdlog::spdlog;XLinkPublic;\$<LINK_ONLY:XLink>;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:BZip2::bz2>;\$<LINK_ONLY:FP16::fp16>;\$<LINK_ONLY:archive_static>;\$<LINK_ONLY:ZLIB::zlib>;\$<LINK_ONLY:LZ4::lz4>;\$<LINK_ONLY:httplib::httplib>;\$<LINK_ONLY:mp4v2::mp4v2>;xtensor;\$<LINK_ONLY:Backward::Backward>"
)

# Create imported target depthai::opencv
add_library(depthai::opencv STATIC IMPORTED)

set_target_properties(depthai::opencv PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "DEPTHAI_TARGET_OPENCV;DEPTHAI_HAVE_OPENCV_SUPPORT"
  INTERFACE_LINK_LIBRARIES "opencv_core;opencv_imgproc;opencv_videoio;depthai::core"
)

# Create imported target depthai::depthai-resources
add_library(depthai::depthai-resources STATIC IMPORTED)

set_target_properties(depthai::depthai-resources PROPERTIES
  INTERFACE_LINK_LIBRARIES "depthai::cmrc-base"
)

# Create imported target depthai::cmrc-base
add_library(depthai::cmrc-base INTERFACE IMPORTED)

set_target_properties(depthai::cmrc-base PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_nullptr"
  INTERFACE_INCLUDE_DIRECTORIES "/home/lan-sevcnikar/Documents/depthai/depthai-core/cmake-build-debug/_cmrc/include"
)

# Import target "depthai::core" for configuration "Debug"
set_property(TARGET depthai::core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(depthai::core PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C;CXX"
  IMPORTED_LOCATION_DEBUG "/home/lan-sevcnikar/Documents/depthai/depthai-core/cmake-build-debug/libdepthai-core.a"
  )

# Import target "depthai::opencv" for configuration "Debug"
set_property(TARGET depthai::opencv APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(depthai::opencv PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/lan-sevcnikar/Documents/depthai/depthai-core/cmake-build-debug/libdepthai-opencv.a"
  )

# Import target "depthai::depthai-resources" for configuration "Debug"
set_property(TARGET depthai::depthai-resources APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(depthai::depthai-resources PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/lan-sevcnikar/Documents/depthai/depthai-core/cmake-build-debug/libdepthai-resources.a"
  )

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "xtensor" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
